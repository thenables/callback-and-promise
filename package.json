{
  "name": "callback-and-promise",
  "version": "2.0.0",
  "description": "make generic async function return promise when callback not present",
  "main": "index.js",
  "scripts": {
    "test": "make test"
  },
  "keywords": [
    "promise",
    "callback",
    "promisify"
  ],
  "files": [
    "index.js",
    "all.js"
  ],
  "author": {
    "name": "dead-horse",
    "email": "dead_horse@qq.com",
    "url": "http://deadhorse.me"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:thenables/callback-and-promise"
  },
  "license": "MIT",
  "dependencies": {
    "multiline": "~1.0.1",
    "native-or-bluebird": "~1.2.0"
  },
  "devDependencies": {
    "autod": "2.4.2",
    "bluebird": "~3.1.1",
    "istanbul-harmony": "~0.3.1",
    "mocha": "~2.3.4",
    "should": "~8.2.0"
  },
  "engine": {
    "node": ">=0.10"
  }
}
